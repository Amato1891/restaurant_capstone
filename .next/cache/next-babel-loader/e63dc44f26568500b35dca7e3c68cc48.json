{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amato\\\\OneDrive\\\\Desktop\\\\MIT XPRO\\\\restaurant_capstone\\\\components\\\\restaurantPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from '@apollo/client';\nimport Dishes from \"./dishes\";\nimport { useContext, useState } from 'react';\nimport Router from 'next/router';\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nfunction RestaurantPage() {\n  _s();\n\n  const {\n    0: restaurantID,\n    1: setRestaurantID\n  } = useState(0);\n  const {\n    cart,\n    user\n  } = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState(cart);\n  const activeUser = user.activeUser;\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANTS);\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"ERROR\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Not found\"); // console.log(`Query Data: ${JSON.stringify(data.restaurants)}`)\n\n  return 'Hello World!';\n}\n\n_s(RestaurantPage, \"vSa8LMF71aaYXu2cay25+xCoLgA=\", false, function () {\n  return [useQuery];\n});\n\n_c = RestaurantPage;\nexport default RestaurantPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantPage\");","map":{"version":3,"sources":["C:/Users/amato/OneDrive/Desktop/MIT XPRO/restaurant_capstone/components/restaurantPage.js"],"names":["gql","useQuery","Dishes","useContext","useState","Router","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Container","Row","Col","RestaurantPage","restaurantID","setRestaurantID","cart","user","state","setState","activeUser","GET_RESTAURANTS","loading","error","data"],"mappings":";;;;;AAAA,SAAQA,GAAR,EAAYC,QAAZ,QAA2B,gBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,UAAR,EAAoBC,QAApB,QAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,UAAP,MAAuB,WAAvB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,OAJF,EAKEC,QALF,EAMEC,SANF,EAOEC,SAPF,EAQEC,GARF,EASEC,GATF,QASY,YATZ;;AAWA,SAASC,cAAT,GAAyB;AAAA;;AACvB,QAAK;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCd,QAAQ,CAAC,CAAD,CAA/C;AACA,QAAM;AAACe,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAgBjB,UAAU,CAACG,UAAD,CAAhC;AACA,QAAM;AAAA,OAACe,KAAD;AAAA,OAAQC;AAAR,MAAoBlB,QAAQ,CAACe,IAAD,CAAlC;AACA,QAAMI,UAAU,GAAGH,IAAI,CAACG,UAAxB;AACA,QAAMC,eAAe,GAAGxB,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAXE;AAYA,QAAM;AAAEyB,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2B1B,QAAQ,CAACuB,eAAD,CAAzC;AACA,MAAIC,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACX,MAAI,CAACC,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP,CApBY,CAqBxB;;AAEG,SACI,cADJ;AAGH;;GA1BQX,c;UAiB0Bf,Q;;;KAjB1Be,c;AA4BT,eAAeA,cAAf","sourcesContent":["import {gql,useQuery} from '@apollo/client';\r\nimport Dishes from \"./dishes\"\r\nimport {useContext, useState} from 'react';\r\nimport Router from 'next/router';\r\nimport AppContext from \"./context\"\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardText,\r\n  CardTitle,\r\n  Container,\r\n  Row,\r\n  Col} from \"reactstrap\";\r\n  \r\nfunction RestaurantPage(){\r\n  const[restaurantID, setRestaurantID] = useState(0)\r\n  const {cart, user } = useContext(AppContext);\r\n  const [state, setState] = useState(cart);\r\n  const activeUser = user.activeUser;\r\n  const GET_RESTAURANTS = gql`\r\n    query {\r\n      restaurants {\r\n        id\r\n        name\r\n        description\r\n        image {\r\n          url\r\n        }\r\n      }\r\n    }\r\n  `;\r\n  const { loading, error, data } = useQuery(GET_RESTAURANTS)\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>ERROR</p>;\r\n  if (!data) return <p>Not found</p>;\r\n // console.log(`Query Data: ${JSON.stringify(data.restaurants)}`)\r\n\r\n    return(\r\n        'Hello World!'\r\n    )\r\n}\r\n\r\nexport default RestaurantPage"]},"metadata":{},"sourceType":"module"}