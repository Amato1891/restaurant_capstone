{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amato\\\\OneDrive\\\\Desktop\\\\MIT XPRO\\\\restaurant_capstone\\\\components\\\\restaurantPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from '@apollo/client';\nimport Dishes from \"./dishes\";\nimport { useContext, useState } from 'react';\nimport Router from 'next/router';\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nfunction RestaurantPage() {\n  _s();\n\n  const {\n    0: restaurantID,\n    1: setRestaurantID\n  } = useState(0);\n  const {\n    cart,\n    user\n  } = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState(cart);\n  const activeUser = user.activeUser;\n  const GET_RESTAURANTS = gql`\n      query {\n        restaurants {\n          id\n          name\n          description\n          image {\n            url\n          }\n        }\n      }\n    `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANTS);\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }\n  }, \"ERROR\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }\n  }, \"Not found\"); // console.log(`Query Data: ${JSON.stringify(data.restaurants)}`)\n\n  let searchQuery = data.restaurants.filter(res => {\n    return res.name.toLowerCase().includes(props.search);\n  });\n\n  if (searchQuery.length === 0) {\n    return __jsx(\"div\", {\n      style: {\n        color: \"red\",\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }\n    }, `No restaurants found, try refining your search.`);\n  }\n\n  ;\n  let restId = searchQuery[0].id; // definet renderer for Dishes\n\n  const renderDishes = restaurantID => {\n    return __jsx(Dishes, {\n      restId: restaurantID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, \" \");\n  };\n\n  if (searchQuery.length > 0) {\n    const restList = searchQuery.map(res => __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      key: res.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 0.5rem 20px 0.5rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 200\n      },\n      src: `http://localhost:1337` + res.image.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }), __jsx(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, __jsx(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, res.description)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      id: res.name,\n      color: \"info\",\n      disabled: !activeUser,\n      onClick: () => Router.push(`/dishes/${res.name}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, res.name)))));\n    return 'Hello World!';\n  }\n}\n\n_s(RestaurantPage, \"vSa8LMF71aaYXu2cay25+xCoLgA=\", false, function () {\n  return [useQuery];\n});\n\n_c = RestaurantPage;\nexport default RestaurantPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantPage\");","map":{"version":3,"sources":["C:/Users/amato/OneDrive/Desktop/MIT XPRO/restaurant_capstone/components/restaurantPage.js"],"names":["gql","useQuery","Dishes","useContext","useState","Router","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Container","Row","Col","RestaurantPage","restaurantID","setRestaurantID","cart","user","state","setState","activeUser","GET_RESTAURANTS","loading","error","data","searchQuery","restaurants","filter","res","name","toLowerCase","includes","props","search","length","color","fontWeight","restId","id","renderDishes","restList","map","margin","height","image","url","description","push"],"mappings":"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","sourcesContent":["import {gql,useQuery} from '@apollo/client';\r\nimport Dishes from \"./dishes\"\r\nimport {useContext, useState} from 'react';\r\nimport Router from 'next/router';\r\nimport AppContext from \"./context\"\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardText,\r\n  CardTitle,\r\n  Container,\r\n  Row,\r\n  Col} from \"reactstrap\";\r\n\r\nfunction RestaurantPage() {\r\n    const[restaurantID, setRestaurantID] = useState(0)\r\n    const {cart, user } = useContext(AppContext);\r\n    const [state, setState] = useState(cart);\r\n    const activeUser = user.activeUser;\r\n    const GET_RESTAURANTS = gql`\r\n      query {\r\n        restaurants {\r\n          id\r\n          name\r\n          description\r\n          image {\r\n            url\r\n          }\r\n        }\r\n      }\r\n    `;\r\n    const { loading, error, data } = useQuery(GET_RESTAURANTS)\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>ERROR</p>;\r\n    if (!data) return <p>Not found</p>;\r\n   // console.log(`Query Data: ${JSON.stringify(data.restaurants)}`)\r\n  \r\n  \r\n  let searchQuery = data.restaurants.filter((res) =>{\r\n      return res.name.toLowerCase().includes(props.search)\r\n    });\r\n  \r\n    if(searchQuery.length === 0) {\r\n      return <div style={{color: \"red\", fontWeight:'bold'}}>{`No restaurants found, try refining your search.`}</div>\r\n    };\r\n  \r\n  let restId = searchQuery[0].id;\r\n   \r\n  // definet renderer for Dishes\r\n    const renderDishes = (restaurantID) => {\r\n      return (<Dishes restId={restaurantID}> </Dishes>)\r\n    };\r\n  if(searchQuery.length > 0){\r\n    const restList = searchQuery.map((res) => (\r\n      <Col xs=\"6\" sm=\"4\" key={res.id}>\r\n        <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\r\n          <CardImg\r\n            top={true}\r\n            style={{ height: 200 }}\r\n            src={\r\n            `http://localhost:1337`+ res.image.url\r\n            }\r\n          />\r\n          <CardBody>\r\n            <CardText>{res.description}</CardText>\r\n          </CardBody>\r\n          <div className=\"card-footer\">\r\n          \r\n          <Button id={res.name} color=\"info\" disabled={!activeUser} onClick={()=> Router.push(`/dishes/${res.name}`)} \r\n           >{res.name}</Button>\r\n          {/* onClick={()=> setRestaurantID(res.id)} */}\r\n          </div>\r\n        </Card>\r\n      </Col>\r\n    ))\r\n\r\n    return(\r\n        'Hello World!'\r\n    )\r\n}}\r\nexport default RestaurantPage"]},"metadata":{},"sourceType":"module"}